
#include<fstream>

//获取二进制文件长度（1）
std::streampos b, e;
std::ifstream  input(bin_file, std::ios::in | std::ios::binary);
b = input.tellg();
input.seekg (0, std::ios::end);
e = input.tellg();
unsigned long len = end - begin;
printf("input size:%ld\n", len);
input.seekg(0, std::ios::beg);    //读取内容前，重置cursor位置，不然读取的内容为空

//获取文件长度（2）
ifstream ifs(filename, ios::binary|ios::ate);
ifstream::pos_type pos = ifs.tellg();
int length = pos;                 //如果文件很大，将被截取

// 手工分配内存，不是好主意
char *pChars = new char[length];
ifs.seekg(0, ios::beg);
ifs.read(pChars, length);         //读取内容
ifs.close();
    

 //二进制文件-->vector
std::ifstream file("./1.jpg");
std::vector<uchar> data;
file >> std::noskipws;
std::copy(std::istream_iterator<char>(file), std::istream_iterator<char>(), std::back_inserter(data));

//vector-->二进制文件
vectro<uchar> buff;
ofstream out("./dst_wm.jpg", std::ios::binary | std::ios::out);
copy(buff.begin(),buff.end(),ostream_iterator<uchar>(out));
out.close();

//ofstream写文本文件
#include <iostream>
#include <fstream>
using namespace std;

int main () {
  ofstream myfile;
  myfile.open ("example.txt");
  myfile << "Writing this to a file.\n";
  myfile.close();
  return 0;
}

//ofstream写二进制文件
char fn[128]="...";
char arr_bin[...];
std::ofstream fs(buf, std::ios::out | std::ios::binary | std::ios::app);
fs.write(arr_bin, sizeof(arr_bin));
fs.close();
